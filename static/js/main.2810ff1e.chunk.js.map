{"version":3,"sources":["home/Home.js","about/about.js","defaultView/header.js","defaultView/default.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","handleChange","e","value","target","setState","inputValue","state","className","style","backgroundImage","height","backgroundSize","backgroundPosition","backgroundRepeat","htmlFor","type","onChange","this","defaultValue","id","name","to","pathname","filters","on","title","React","Component","About","Header","DefaultView","handleFilterChange","filterObj","updateFilter","addToFavorites","movie","tempFavList","favorites","push","set","Set","noDuplicates","Array","from","removeFavorite","favs","filter","item","movieView","selectedMovie","viewMode","defaultView","Loading","src","alt","Default","favoritesList","removeFav","returnFilter","movieList","addFav","MovieDetails","returnView","location","onV","titleVar","before","after","below","above","fetch","response","json","jsonData","sort","a","b","localeCompare","console","error","MovieFilter","event","submitChange","clearHandler","onClick","MoviesList","filterList","includes","release_date","substring","ratings","average","currentFilter","map","index","key","FavoritesList","Favorite","remFav","poster","favorite","LargeMovie","Cast","castObj","cast","character","fetchCastInfo","Crew","crewObj","crew","credit_id","department","job","castOrCrew","castCrew","movieData","production","switchView","MovieView","tagline","revenue","runtime","href","imdb_id","tmdb_id","closeCast","castMember","CastView","profile_path","birthday","biography","place_of_birth","url","prevProps","dir","castMem","SingleMovie","App","basename","process","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2810ff1e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./home.css\";\r\nimport { Link } from 'react-router-dom';\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {inputValue : \"\"};\r\n    }\r\n    handleChange = e => {\r\n            const {value} = e.target;\r\n            this.setState({inputValue : value})\r\n    }\r\n    render() {\r\n        let imgUrl = \"https://images.unsplash.com/photo-1489599849927-2ee91cede3ba?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\";\r\n        return (\r\n            <div className='banner'\r\n                style={{\r\n                    backgroundImage: `url(${imgUrl})`,\r\n                    height: '1200px',\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center center',\r\n                    backgroundRepeat: 'no-repeat',\r\n                }}>\r\n                <div className='middleText' >\r\n                    <h1>Movie Browser</h1>\r\n\r\n                    <form>\r\n                    <label htmlFor=\"title\">Title</label>\r\n                     <input type=\"text\" onChange={this.handleChange} defaultValue=\"\" id=\"movTitle\" name=\"title\"/>\r\n                    </form>\r\n                   \r\n                   <Link to={{ pathname: '/defaultView',\r\n                                 state: {\r\n                                 filters: {on:true,\r\n                                          title:this.state.inputValue}\r\n                                     }\r\n                                }}><button>Show Matching Movies</button> </Link><Link to={{ pathname: '/defaultView',\r\n                                state: {\r\n                                filters: {on:false,\r\n                                         title:\"\"}\r\n                                    }\r\n                               }}> <button>Show All Movies</button> </Link>\r\n                </div>\r\n                <p> Credit for photo https://unsplash.com/photos/evlkOfkQ5rE</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nclass About extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"aboutHeader\">\r\n                    <h1>Web 3 Assignment 1</h1>\r\n                    <h2>By Logan Corbett</h2>\r\n\r\n                </div>\r\n                <div>\r\n                    <h2>Technology used:</h2>\r\n                    <ul>\r\n                        <li>React</li>\r\n                        <li>VSCode</li>\r\n                        <li>Not used: CSS</li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <h3>Credits:</h3>\r\n                    <p>Photos taken from: https://unsplash.com/photos/evlkOfkQ5rE and https://media2.giphy.com/media/xUbVzuNjpWe0E/giphy.gif?cid=790b76116961966c0be53a69dc4fb7e4679210f10742be1f&rid=giphy.gif</p>\r\n                </div>\r\n               <Link to='/home'> <button>Return to home</button></Link>\r\n               <Link to={{ pathname: '/defaultView',\r\n                                state: {\r\n                                filters: {on:false,\r\n                                         title:\"\"}\r\n                                    }\r\n                               }}> <button>Return to Movie List</button> </Link>\r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default About","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n   \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"item-header\">\r\n        \r\n        <Link to='/home'> <i  className=\"fas fa-theater-masks\" id=\"homeButton\"></i> </Link>\r\n            <Link to='/about'><button className=\"aboutButton\">About</button> </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Header","import React from 'react';\r\nimport './default.css';\r\nimport 'typeface-roboto';\r\nimport Header from './header'\r\nclass DefaultView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { on: onV, title: titleVar } = this.props.location.state.filters;\r\n        this.state = {\r\n            movieList: [],\r\n            favorites: [],\r\n            filters: {\r\n                on: onV,\r\n                title: titleVar,\r\n                before: 3000,\r\n                after: 0,\r\n                below: 10,\r\n                above: 0\r\n            },\r\n            viewMode: \"loading\",\r\n            selectedMovie : {}\r\n        };\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const url = \"http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies-brief.php?id=ALL\";\r\n            const response = await fetch(url);\r\n            const jsonData = await response.json();\r\n            jsonData.sort((a, b) => a.title.localeCompare(b.title));\r\n            this.setState({ movieList: jsonData, viewMode: \"default\" });\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    handleFilterChange = filterObj => {\r\n\r\n        const updateFilter = this.state.filters;\r\n        for (let name in filterObj) {\r\n            updateFilter[name] = filterObj[name];\r\n        }\r\n        this.setState({ filters: updateFilter })\r\n    }\r\n\r\n    addToFavorites = movie => {\r\n        const tempFavList = this.state.favorites;\r\n        tempFavList.push(movie);\r\n        let set = new Set(tempFavList);\r\n        let noDuplicates = Array.from(set)\r\n        this.setState({ favorites: noDuplicates });\r\n    }\r\n    removeFavorite = movie =>{\r\n        let favs = this.state.favorites;\r\n        favs = favs.filter(item => item.id !== movie.id);\r\n        this.setState({favorites:favs});\r\n    }\r\n    movieView = movie => {\r\n        this.setState({selectedMovie:movie});\r\n        this.setState({viewMode:\"movieDetails\"});\r\n    }\r\n    defaultView = () => {\r\n        this.setState({selectedMovie:{},viewMode:\"default\"})\r\n    }\r\n\r\n    Loading = () => {\r\n        return (\r\n            <img src=\"https://media2.giphy.com/media/xUbVzuNjpWe0E/giphy.gif?cid=790b76116961966c0be53a69dc4fb7e4679210f10742be1f&rid=giphy.gif\" alt=\"loading gif\" />\r\n        )\r\n    }\r\n    Default = () => {\r\n        return (<div className=\"mainContainer\">\r\n            <Header />\r\n            <FavoritesList favoritesList={this.state.favorites} movieView={this.movieView} removeFav={this.removeFavorite}  />\r\n            <MovieFilter returnFilter={this.handleFilterChange} className=\"item-filter\" />\r\n            <MoviesList movieList={this.state.movieList} addFav={this.addToFavorites} filter={this.state.filters} movieView={this.movieView} className=\"item-list\"/>\r\n        </div>)\r\n    }\r\n    MovieDetails = () => {\r\n        return (<div className=\"container\">\r\n            <Header />\r\n            <FavoritesList favoritesList={this.state.favorites} movieView={this.movieView} removeFav={this.removeFavorite}/>\r\n            <LargeMovie movie={this.state.selectedMovie} addFav={this.addToFavorites} returnView={this.defaultView} />\r\n        </div>\r\n\r\n        )\r\n    }\r\n    render() {\r\n        if (this.state.viewMode == \"loading\") {\r\n            return this.Loading();\r\n        }\r\n        else if (this.state.viewMode == \"default\") {\r\n            return this.Default();\r\n\r\n        } else if (this.state.viewMode == \"movieDetails\") {\r\n            return this.MovieDetails();\r\n        }\r\n\r\n    }\r\n}\r\n\r\nclass MovieFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            before: 3000,\r\n            after: 0,\r\n            below: 10,\r\n            above: 0\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    submitChange = () => {\r\n        const filterObj = this.state;\r\n        filterObj.on = true;\r\n        this.props.returnFilter(filterObj);\r\n    }\r\n    clearHandler = () => {\r\n        const filterObj = {\r\n            title: \"\",\r\n            before: 3000,\r\n            after: 0,\r\n            below: 10,\r\n            above: 0,\r\n            on: false\r\n        };\r\n        this.setState({ title: filterObj.title, before: filterObj.before, after: filterObj.after, below: filterObj.below, above: filterObj.above, on: filterObj.on });\r\n        this.props.returnFilter(filterObj);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"item-filter\">\r\n                <h1>Movie Filter</h1>\r\n                <form>\r\n                    <label id=\"titleHeader\" htmlFor=\"title\">Title</label> <br />\r\n                    <input type=\"text\" onChange={this.handleChange} defaultValue={this.state.title} name=\"title\" /> <br />\r\n\r\n                    <label id=\"titleHeader\" htmlFor=\"year\">Year</label> <br />\r\n                    <input type=\"radio\" id=\"before\" name=\"year\" value=\"before\" />\r\n                    <label htmlFor=\"male\">Before</label> <input type=\"number\" onChange={this.handleChange} name=\"before\" /><br />\r\n                    <input type=\"radio\" id=\"after\" name=\"year\" value=\"after\" />\r\n                    <label htmlFor=\"female\">After</label> <input type=\"number\" onChange={this.handleChange} name=\"after\" /><br />\r\n                    <input type=\"radio\" id=\"between\" name=\"year\" value=\"between\" />\r\n                    <label htmlFor=\"other\">Between</label> <input type=\"number\" onChange={this.handleChange} name=\"after\" />\r\n                    <input type=\"number\" onChange={this.handleChange} name=\"before\" /> <br />\r\n                    <label id=\"titleHeader\" htmlFor=\"rating\">Rating</label> <br />\r\n                    <label htmlFor=\"rating\">Below:(0-10)</label>\r\n                    <input type=\"number\" onChange={this.handleChange} name=\"below\" /> <br />\r\n                    <label htmlFor=\"rating\">Above:(0-10)</label>\r\n                    <input type=\"number\" onChange={this.handleChange} name=\"above\" /><br />\r\n                    <label htmlFor=\"rating\">Between:(0-10)</label>\r\n                    <input type=\"number\" onChange={this.handleChange} name=\"above\" />\r\n                    <input type=\"number\" onChange={this.handleChange} name=\"below\" /> <br />\r\n\r\n                </form>\r\n                <button onClick={this.submitChange}>Filter</button>\r\n                <button onClick={this.clearHandler}>Clear</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass MoviesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { currentFilter: this.props.filter };\r\n    }\r\n\r\n    filterList = () => {\r\n        const newList = this.props.movieList.filter(movie => {\r\n            return (movie.title.includes(this.props.filter.title) &&\r\n                movie.release_date.substring(0, 4) > this.props.filter.after &&\r\n                movie.release_date.substring(0, 4) < this.props.filter.before &&\r\n                movie.ratings.average > this.props.filter.above &&\r\n                movie.ratings.average < this.props.filter.below)\r\n\r\n        })\r\n        return newList\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"item-list\">\r\n                <h1>Movie List</h1>\r\n                <table className=\"movieTable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Title</th>\r\n                            <th>Year</th>\r\n                            <th>Rating</th>\r\n                        </tr>\r\n                        {this.filterList().map((movie, index) => {\r\n                            return <SingleMovie movie={movie} key={movie.id} addFav={this.props.addFav} movieView={this.props.movieView} />\r\n                        })}\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nclass FavoritesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    Favorite = (props) => {\r\n        return (\r\n            <div className=\"favPoster\">\r\n                <button className=\"removeButton\" onClick={()=>props.remFav(props.movie)}><i className=\"fa fa-window-close\" ></i></button>\r\n            <img  onClick={()=>this.props.movieView(props.movie)} src={\"http://image.tmdb.org/t/p/w92\" + props.movie.poster} alt={props.movie.title} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item-favorite\">\r\n                {this.props.favoritesList.map((favorite, index) => {\r\n                    return <this.Favorite movie={favorite} key={favorite.id} movieView={this.props.movieView} remFav={this.props.removeFav}/>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass LargeMovie extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { movieData: {}, castCrew:\"cast\",castMember:{},viewMode:\"loading\" };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const url = \"http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies.php?id=\" + this.props.movie.id;\r\n            const response = await fetch(url);\r\n            const jsonData = await response.json();\r\n            this.setState({ movieData: jsonData, viewMode:\"movie\" });\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n    }\r\n    async componentDidUpdate(prevProps) {\r\n        if(this.props.movie.id !== prevProps.movie.id){\r\n        try {\r\n            const url = \"http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies.php?id=\" + this.props.movie.id;\r\n            const response = await fetch(url);\r\n            const jsonData = await response.json();\r\n            console.dir(jsonData);\r\n            this.setState({ movieData: jsonData, viewMode:\"movie\" });\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    }\r\n\r\n    Cast = (castObj) =>{\r\n        return(\r\n            <table>\r\n                 <tbody>\r\n                        <tr>\r\n                            <th>Character</th>\r\n                            <th>Name</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    {castObj.map((cast,index) => {\r\n                        return(\r\n                            <tr key={cast.id}>\r\n                                <td>{cast.character}</td>\r\n                                <td>{cast.name} </td>\r\n                                <td><button onClick={() => this.fetchCastInfo(cast)}>View</button></td>\r\n                            </tr>)\r\n                    })}\r\n \r\n                    </tbody>\r\n            </table>\r\n        )   \r\n    }\r\n    async fetchCastInfo (castObj){\r\n        try {\r\n            let url = `https://api.themoviedb.org/3/person/${castObj.id}?api_key=fbf53756fe16ca36e16c1ed7a5df8032`;\r\n            const response = await fetch(url);\r\n            const castMem = await response.json();\r\n            this.setState({ castMember: castMem, viewMode: \"cast\" });\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    Crew = (crewObj) =>{\r\n        return(\r\n            <table>\r\n                 <tbody>\r\n                        <tr>\r\n                            <th>Department</th>\r\n                            <th>Job</th>\r\n                            <th>Name</th>\r\n                        </tr>\r\n                    {crewObj.map((crew,index) => {\r\n                        return(\r\n                            <tr key={crew.credit_id}>\r\n                                <td>{crew.department}</td>\r\n                                <td>{crew.job} </td>\r\n                                <td>{crew.name}</td>\r\n                            </tr>)\r\n                    })}\r\n \r\n                    </tbody>\r\n            </table>\r\n        )   \r\n    }\r\n    Loading = () => {\r\n        return (\r\n            <img src=\"https://media2.giphy.com/media/xUbVzuNjpWe0E/giphy.gif?cid=790b76116961966c0be53a69dc4fb7e4679210f10742be1f&rid=giphy.gif\" alt=\"loading gif\" />\r\n        )\r\n    }\r\ncastOrCrew = () =>{\r\n    if (this.state.castCrew === \"cast\"){\r\n        return this.Cast(this.state.movieData.production.cast) ;\r\n    }\r\n    if (this.state.castCrew === \"crew\"){\r\n        return this.Crew(this.state.movieData.production.crew) ;\r\n    }\r\n    \r\n    }\r\n    switchView = () =>{\r\n        if(this.state.castCrew === \"cast\"){\r\n            this.setState({castCrew:\"crew\"});\r\n        }\r\n        else if (this.state.castCrew === \"crew\") {\r\n            this.setState({castCrew:\"cast\"})\r\n    }\r\n}\r\nMovieView = () =>{\r\n    return(<div>\r\n        <div className=\"item-movie-left\">\r\n            <div>\r\n            <h1>{this.state.movieData.title}</h1> <button onClick={() => this.props.returnView()}><i className=\"fa fa-window-close\" ></i></button>                    \r\n            <img src={\"http://image.tmdb.org/t/p/w185\" + this.state.movieData.poster} alt={this.state.movieData.tagline} />\r\n        \r\n            <button onClick={() => this.props.addFav(this.props.movie)}>Add To Favorites</button>\r\n            <p>Relase Date: {this.state.movieData.release_date}</p>\r\n            <p>Revenue: ${this.state.movieData.revenue}</p>\r\n            <p>Runtime: {this.state.movieData.runtime} minutes</p>\r\n            <p>Tagline: {this.state.movieData.tagline}</p>\r\n            <a href={\"https://www.imdb.com/title/\" + this.state.movieData.imdb_id}> <p>IMDB Link  </p></a>\r\n            <a href={\"https://www.themoviedb.org/movie/\" + this.state.movieData.tmdb_id}> <p>TMDB Link</p> </a>\r\n            <p>Rating: {this.state.movieData.ratings.average}</p>\r\n\r\n        </div>\r\n        </div>\r\n        <div className=\"item-movie-right\">\r\n            <h1>Cast and Crew</h1>\r\n            <button onClick={() =>this.switchView()}>Switch Cast or Crew</button>\r\n            {this.castOrCrew()}\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n}\r\ncloseCast = () =>{\r\n    this.setState({castMember: {}, viewMode: \"movie\" })\r\n}\r\nCastView = () =>{\r\n    \r\n    return(\r\n        <div>\r\n            <div className=\"item-leftSide\">\r\n                <h1>{this.state.castMember.name}</h1>\r\n                <img src={\"http://image.tmdb.org/t/p/w185\" + this.state.castMember.profile_path} alt={this.state.castMember.name} />\r\n                <button onClick={() => this.closeCast()}>Close Cast View</button>\r\n            </div>\r\n            <div>\r\n                <p>Birthday: {this.state.castMember.birthday}</p>\r\n                <p>Biography: {this.state.castMember.biography}</p>\r\n                <p>Place of Birth: {this.state.castMember.place_of_birth}</p>\r\n\r\n            </div>\r\n            <div className=\"item-rightSide\">\r\n                <h1>Cast and Crew</h1>\r\n                <button onClick={() =>this.switchView()}>Switch Cast or Crew</button>\r\n                {this.castOrCrew()}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n    render() {\r\n        if (this.state.viewMode == \"loading\") {\r\n            return this.Loading();\r\n        }\r\n        else if (this.state.viewMode == \"movie\") {\r\n            return this.MovieView();\r\n\r\n        } else if (this.state.viewMode == \"cast\") {\r\n            return this.CastView();\r\n        }\r\n    }\r\n    }\r\n\r\n\r\nclass SingleMovie extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <tr className=\"singleRow\">\r\n\r\n                <td>\r\n                    <img src={\"http://image.tmdb.org/t/p/w92\" + this.props.movie.poster} alt={this.props.movie.title} />\r\n                </td>\r\n                <td>\r\n                    <p id=\"title\" onClick={()=>this.props.movieView(this.props.movie)}>{this.props.movie.title}</p>\r\n                </td>\r\n                <td>\r\n                    {this.props.movie.release_date.substring(0, 4)}\r\n                </td>\r\n                <td>\r\n                    \r\n                        {this.props.movie.ratings.average}\r\n                        \r\n                </td>\r\n                <td>\r\n                <div className=\"rightSide\">\r\n                        <button onClick={() => this.props.addFav(this.props.movie)} type=\"submit\" >\r\n                            <i className=\"fas fa-heart\"></i></button>\r\n                        <button onClick={()=>this.props.movieView(this.props.movie)}>View</button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default DefaultView","import React from 'react';\r\nimport './App.css';\r\nimport Home from './home/Home';\r\nimport About from './about/about'\r\nimport DefaultView from './defaultView/default'\r\nimport {Route,Router} from 'react-router-dom';\r\nfunction App() {\r\n  return (\r\n <main>\r\n   <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n   <Route path='/' exact component={Home} />\r\n   </Router>\r\n   <Route path='/home' exact component={Home} />\r\n  <Route path ='/about' exact component={About} />\r\n   <Route path='/defaultView' exact component={DefaultView} />\r\n  </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}